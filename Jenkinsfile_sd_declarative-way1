//Jenkins Pipeline - Declarative Way

pipeline{

//agent any

agent{
label'jenkins-nodes'
}//agent closing

//Adding Maven tool
tools {
  maven 'Maven 3.8.6'
}

options {
  timestamps()
}

stages{

//Checkout code stage
stage('CheckOutCode'){
steps{
slackNotification('STARTED')
git branch: 'development', credentialsId: '07bb55e8-292f-48f9-bffe-1371dff92ea6', url: 'https://github.com/somudurgi/maven-web-application.git'
}//steps closing
}//checkoutcode stage closing

stage('MavenBuild'){
steps{
sh "mvn clean package"
}//steps closing
}//Build Closing
/*
stage('GenerateSonarQubeReports'){
steps{
sh "mvn clean sonar:sonar"
}//steps closing
}//stage closing for SQ

stage('UploadArtifactsToNexus'){
steps{
sh "mvn clean deploy"
}//steps closing
}//stage closing for Nexus
*/
stage('DeployPackagestoTomcat'){
steps{
//command for connecting jenkins to tomcat server
sshagent(['253a3196-9f96-47eb-8e62-05898b7e2a1f']) {
//copying war file from jenkins to tomcat server
sh "scp -o StrictHostKeyChecking=no /home/ec2-user/slavenode1/workspace/Pipeline-Declarative_Way1/target/maven-web-application.war ec2-user@172.31.41.128:/opt/apache-tomcat-9.0.70/webapps/"
}//sshagent closing

}//steps closing

}//stage closing for Tomcat

}//stages closing

post {
  success {
    slackNotification(currentBuild.result)
  }
  failure {
    slackNotification(currentBuild.result)
  }
}

}//pipeline closing

//slackNotification function
def slackNotification(String buildStatus = 'STARTED'){
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FF8C00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#008000'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
